name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Validate
        run: mvn validate -Pprod -DskipTests

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Get last commit hash from S3
        run: |
          aws s3 cp s3://frontend-linksaver-s3/latest_commit_hash.txt latest_commit_hash.txt
          echo "COMMIT_HASH=$(cat latest_commit_hash.txt)" >> $GITHUB_ENV

      - name: Download frontend build from S3
        run: aws s3 sync s3://frontend-linksaver-s3/builds/${{env.COMMIT_HASH}} src/main/resources/static

      - name: Build Spring Boot project
        run: mvn package -Pprod -DskipTests

      - name: Get App Version
        id: get-app-version
        run: |
          APP_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/linksaver-${{env.APP_VERSION}}.jar

    outputs:
      APP_VERSION: ${{ steps.get-app-version.outputs.APP_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: APP_VERSION=${{env.APP_VERSION}}
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            tahabozdemir/linksaver:latest
            tahabozdemir/linksaver:${{env.APP_VERSION}}
